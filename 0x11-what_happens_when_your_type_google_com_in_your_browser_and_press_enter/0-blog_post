What happens when you type https://www.google.com in your browser and press Enter.


when a URL is typed into the browser and the enter key is hit several things happen such as the browser scans for the domain name enter and matches it with the respective IP address via DNS (Domain Name System) and there is a request sent called the HTTP request by the browser to the server then the server who will receive the request will in turn send an HTTP response back. At this point, the browser renders resources which is normally a Hyper Text Markup Language (HTML) file, then the browser can send and receive other resources needed for the proper rendering of the web page such as images, styling, etc. By repeating requesting and responding several times. Finally when the page is loaded, the browser send further asynchronous requests anytime it’s needed.
DNS
The Domain Name System is the hierarchical and decentralized naming system used to identify computers, services, and other resources reachable through the Internet or other Internet Protocol networks. As we have said initially, the DNS deals with the naming of the IP address, so when the URL is typed into the browser, the browser by the help of the DNS scans for the matching IP address for the domain name just entered.
TCP/IP
We already spoke about how the domain name is attached to a particular IP which means the Internet Protocol. Now we need to know that it is not only the Internet Protocol that exist in the internet world as we have other protocols, the IP is just a branch of the TCP/IP communication suite that helps in the interconnection of network devices on the internet. The TCP (Transmission Control Protocol) helps in collecting and reassembling packets of data while the IP makes sure that a particular packet of data is sent to the right destination.
Firewall
This is a system designed to prevent authorized access to or from a private network. Most of the time, when a request is made by the browser for resources, now taking our example `https://www.google.com` as an example, and as we have stated above that its IP address is 142.250.188.46, the process of requesting for the contents in the web server has to be verified by the firewall to be sure if it’s safe or not. If the firewall finds it unsafe, then an unsafe flag will be placed, else, the webpage will get rendered.
HTTPS/SSL
I am very sure at every point in time you might have seen websites with http and also with the https, the `s` means secure behind the Hyper-Text Transfer Protocol (HTTP). The HTTPS protocol makes it possible for website users to transmit sensitive data such as credit card numbers, banking information, and login credentials securely over the internet. Normally, the HTTP is enough for the request and response task, but it gives room for the man-in-the-middle attack which allows eavesdropping and information can be stolen or broken. The SSL (Secure Socket Layer) is included to encrypt the data being sent over the internet and avoid being intercepted by a third-party. And this can be seen in the `https://www.google.com`.
Load Balancer
If you are indeed following this article, we have discussed earlier that definitely a websites are connected to IP addresses which connotes that they are situated in what we call a Web server (we will come back to this later). Now you can imagine when you enter `https://www.google.com` and millions of other people are also making same request with their browser at the same time, it will get to a time that the web server will get saturated and the requests will hit a deadlock and one single web server will not be able to serve requests and responses. Now here comes a concept known as Load Balancing, and it is efficiently distributing incoming network traffic across a group of backend servers. A load balancer acts as the “traffic cop” sitting in front of your servers and routing client requests across all servers capable of fulfilling those requests in a manner that maximizes speed and capacity utilization and ensures that no one server is overworked, which could degrade performance. So when `https://www.google.com` is entered in the browser, the load balancer helps distribute the network to the most available web server. HAproxy is a very famous load-balancer, and example of algorithms that we can use are the round-robin, which distributes the requests alternating between all the servers evenly and consequentially, or the least-connection, which distributes requests depending on the current server loads.
Database
The last thing we shall discuss is the Database management system, before we delve into that we need to know why we need a database. A database is information that is set up for easy access, management and updating. Computer databases typically store aggregations of data records or files that contain information, such as sales transactions, customer data, financials and product information. A Database Management System typically helps us define, manipulate, retrieve and manage data in a database.
How can we bring all these together, when we type `https://www.google.com` in our browser, the browser sends some requests after the DNS has decided what IP address to look from, the webserver then looks up the requested URL and if is there, it grab the file and send it back as a HTTP response. When the browser gets the required response, it serves the browser with the information gotten from the webserver and display the content.
